// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel2_2mm.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel2_2mm::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel2_2mm::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state1 = "1";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state2 = "10";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state3 = "100";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state4 = "1000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state5 = "10000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state6 = "100000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state7 = "1000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state8 = "10000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state9 = "100000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state10 = "1000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state11 = "10000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state12 = "100000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<40> kernel2_2mm::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<32> kernel2_2mm::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> kernel2_2mm::ap_const_lv32_9 = "1001";
const sc_lv<32> kernel2_2mm::ap_const_lv32_E = "1110";
const sc_lv<32> kernel2_2mm::ap_const_lv32_1B = "11011";
const sc_lv<32> kernel2_2mm::ap_const_lv32_13 = "10011";
const sc_lv<32> kernel2_2mm::ap_const_lv32_27 = "100111";
const sc_lv<32> kernel2_2mm::ap_const_lv32_1 = "1";
const sc_lv<1> kernel2_2mm::ap_const_lv1_0 = "0";
const sc_lv<32> kernel2_2mm::ap_const_lv32_2 = "10";
const sc_lv<32> kernel2_2mm::ap_const_lv32_3 = "11";
const sc_lv<32> kernel2_2mm::ap_const_lv32_4 = "100";
const sc_lv<32> kernel2_2mm::ap_const_lv32_8 = "1000";
const sc_lv<32> kernel2_2mm::ap_const_lv32_14 = "10100";
const sc_lv<32> kernel2_2mm::ap_const_lv32_15 = "10101";
const sc_lv<32> kernel2_2mm::ap_const_lv32_16 = "10110";
const sc_lv<32> kernel2_2mm::ap_const_lv32_1C = "11100";
const sc_lv<32> kernel2_2mm::ap_const_lv32_1D = "11101";
const sc_lv<32> kernel2_2mm::ap_const_lv32_22 = "100010";
const sc_lv<6> kernel2_2mm::ap_const_lv6_0 = "000000";
const sc_lv<1> kernel2_2mm::ap_const_lv1_1 = "1";
const sc_lv<64> kernel2_2mm::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> kernel2_2mm::ap_const_lv32_F = "1111";
const sc_lv<32> kernel2_2mm::ap_const_lv32_23 = "100011";
const sc_lv<32> kernel2_2mm::ap_const_lv32_5 = "101";
const sc_lv<32> kernel2_2mm::ap_const_lv32_A = "1010";
const sc_lv<32> kernel2_2mm::ap_const_lv32_17 = "10111";
const sc_lv<32> kernel2_2mm::ap_const_lv32_1E = "11110";
const sc_lv<6> kernel2_2mm::ap_const_lv6_20 = "100000";
const sc_lv<6> kernel2_2mm::ap_const_lv6_1 = "1";
const sc_lv<5> kernel2_2mm::ap_const_lv5_0 = "00000";
const bool kernel2_2mm::ap_const_boolean_1 = true;

kernel2_2mm::kernel2_2mm(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel2_2mm_dadd_64ns_64ns_64_5_full_dsp_1_U1 = new kernel2_2mm_dadd_64ns_64ns_64_5_full_dsp_1<1,5,64,64,64>("kernel2_2mm_dadd_64ns_64ns_64_5_full_dsp_1_U1");
    kernel2_2mm_dadd_64ns_64ns_64_5_full_dsp_1_U1->clk(ap_clk);
    kernel2_2mm_dadd_64ns_64ns_64_5_full_dsp_1_U1->reset(ap_rst);
    kernel2_2mm_dadd_64ns_64ns_64_5_full_dsp_1_U1->din0(grp_fu_222_p0);
    kernel2_2mm_dadd_64ns_64ns_64_5_full_dsp_1_U1->din1(grp_fu_222_p1);
    kernel2_2mm_dadd_64ns_64ns_64_5_full_dsp_1_U1->ce(ap_var_for_const0);
    kernel2_2mm_dadd_64ns_64ns_64_5_full_dsp_1_U1->dout(grp_fu_222_p2);
    kernel2_2mm_dmul_64ns_64ns_64_5_max_dsp_1_U2 = new kernel2_2mm_dmul_64ns_64ns_64_5_max_dsp_1<1,5,64,64,64>("kernel2_2mm_dmul_64ns_64ns_64_5_max_dsp_1_U2");
    kernel2_2mm_dmul_64ns_64ns_64_5_max_dsp_1_U2->clk(ap_clk);
    kernel2_2mm_dmul_64ns_64ns_64_5_max_dsp_1_U2->reset(ap_rst);
    kernel2_2mm_dmul_64ns_64ns_64_5_max_dsp_1_U2->din0(grp_fu_228_p0);
    kernel2_2mm_dmul_64ns_64ns_64_5_max_dsp_1_U2->din1(grp_fu_228_p1);
    kernel2_2mm_dmul_64ns_64ns_64_5_max_dsp_1_U2->ce(ap_var_for_const0);
    kernel2_2mm_dmul_64ns_64ns_64_5_max_dsp_1_U2->dout(grp_fu_228_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln41_1_fu_316_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln41_3_fu_338_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( zext_ln48_3_fu_435_p1 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_D_address0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( D_addr_reg_542 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( zext_ln46_1_fu_387_p1 );

    SC_METHOD(thread_D_ce0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_D_d0);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( storemerge1_reg_200 );

    SC_METHOD(thread_D_we0);
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_add_ln39_fu_285_p2);
    sensitive << ( zext_ln37_reg_458 );
    sensitive << ( zext_ln39_fu_281_p1 );

    SC_METHOD(thread_add_ln41_1_fu_333_p2);
    sensitive << ( zext_ln39_reg_472 );
    sensitive << ( zext_ln41_2_fu_329_p1 );

    SC_METHOD(thread_add_ln41_fu_311_p2);
    sensitive << ( zext_ln37_reg_458 );
    sensitive << ( zext_ln41_fu_307_p1 );

    SC_METHOD(thread_add_ln46_fu_382_p2);
    sensitive << ( zext_ln44_reg_523 );
    sensitive << ( zext_ln46_fu_378_p1 );

    SC_METHOD(thread_add_ln48_1_fu_430_p2);
    sensitive << ( zext_ln46_reg_537 );
    sensitive << ( zext_ln48_2_fu_426_p1 );

    SC_METHOD(thread_add_ln48_fu_408_p2);
    sensitive << ( zext_ln44_reg_523 );
    sensitive << ( zext_ln48_fu_404_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln43_fu_342_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln43_fu_342_p2 );

    SC_METHOD(thread_grp_fu_222_p0);
    sensitive << ( storemerge_reg_154 );
    sensitive << ( storemerge1_reg_200 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_fu_222_p1);
    sensitive << ( reg_232 );
    sensitive << ( tmp_5_reg_580 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_fu_228_p0);
    sensitive << ( reg_232 );
    sensitive << ( A_load_reg_500 );
    sensitive << ( D_load_reg_547 );
    sensitive << ( empty_7_reg_570 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_grp_fu_228_p1);
    sensitive << ( alpha );
    sensitive << ( beta );
    sensitive << ( B_load_reg_510 );
    sensitive << ( C_load_reg_575 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_i_2_fu_348_p2);
    sensitive << ( i_1_reg_178 );

    SC_METHOD(thread_i_fu_251_p2);
    sensitive << ( i_0_reg_132 );

    SC_METHOD(thread_icmp_ln36_fu_245_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_132 );

    SC_METHOD(thread_icmp_ln37_fu_269_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_143 );

    SC_METHOD(thread_icmp_ln40_fu_295_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_167 );

    SC_METHOD(thread_icmp_ln43_fu_342_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( i_1_reg_178 );

    SC_METHOD(thread_icmp_ln44_fu_366_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( j_1_reg_189 );

    SC_METHOD(thread_icmp_ln47_fu_392_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( k_1_reg_211 );

    SC_METHOD(thread_j_2_fu_372_p2);
    sensitive << ( j_1_reg_189 );

    SC_METHOD(thread_j_fu_275_p2);
    sensitive << ( j_0_reg_143 );

    SC_METHOD(thread_k_2_fu_398_p2);
    sensitive << ( k_1_reg_211 );

    SC_METHOD(thread_k_fu_301_p2);
    sensitive << ( k_0_reg_167 );

    SC_METHOD(thread_tmp_7_fu_257_p3);
    sensitive << ( i_0_reg_132 );

    SC_METHOD(thread_tmp_8_fu_354_p3);
    sensitive << ( i_1_reg_178 );

    SC_METHOD(thread_tmp_9_fu_321_p3);
    sensitive << ( k_0_reg_167 );

    SC_METHOD(thread_tmp_address0);
    sensitive << ( tmp_addr_reg_477 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( zext_ln48_1_fu_413_p1 );

    SC_METHOD(thread_tmp_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_tmp_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( storemerge_reg_154 );

    SC_METHOD(thread_tmp_s_fu_418_p3);
    sensitive << ( k_1_reg_211 );

    SC_METHOD(thread_tmp_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_zext_ln37_fu_265_p1);
    sensitive << ( tmp_7_fu_257_p3 );

    SC_METHOD(thread_zext_ln39_1_fu_290_p1);
    sensitive << ( add_ln39_fu_285_p2 );

    SC_METHOD(thread_zext_ln39_fu_281_p1);
    sensitive << ( j_0_reg_143 );

    SC_METHOD(thread_zext_ln41_1_fu_316_p1);
    sensitive << ( add_ln41_fu_311_p2 );

    SC_METHOD(thread_zext_ln41_2_fu_329_p1);
    sensitive << ( tmp_9_fu_321_p3 );

    SC_METHOD(thread_zext_ln41_3_fu_338_p1);
    sensitive << ( add_ln41_1_reg_495 );

    SC_METHOD(thread_zext_ln41_fu_307_p1);
    sensitive << ( k_0_reg_167 );

    SC_METHOD(thread_zext_ln44_fu_362_p1);
    sensitive << ( tmp_8_fu_354_p3 );

    SC_METHOD(thread_zext_ln46_1_fu_387_p1);
    sensitive << ( add_ln46_fu_382_p2 );

    SC_METHOD(thread_zext_ln46_fu_378_p1);
    sensitive << ( j_1_reg_189 );

    SC_METHOD(thread_zext_ln48_1_fu_413_p1);
    sensitive << ( add_ln48_fu_408_p2 );

    SC_METHOD(thread_zext_ln48_2_fu_426_p1);
    sensitive << ( tmp_s_fu_418_p3 );

    SC_METHOD(thread_zext_ln48_3_fu_435_p1);
    sensitive << ( add_ln48_1_fu_430_p2 );

    SC_METHOD(thread_zext_ln48_fu_404_p1);
    sensitive << ( k_1_reg_211 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln36_fu_245_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln37_fu_269_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln40_fu_295_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln43_fu_342_p2 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln44_fu_366_p2 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( icmp_ln47_fu_392_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel2_2mm_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ni, "(port)ni");
    sc_trace(mVcdFile, nj, "(port)nj");
    sc_trace(mVcdFile, nk, "(port)nk");
    sc_trace(mVcdFile, nl, "(port)nl");
    sc_trace(mVcdFile, alpha, "(port)alpha");
    sc_trace(mVcdFile, beta, "(port)beta");
    sc_trace(mVcdFile, tmp_address0, "(port)tmp_address0");
    sc_trace(mVcdFile, tmp_ce0, "(port)tmp_ce0");
    sc_trace(mVcdFile, tmp_we0, "(port)tmp_we0");
    sc_trace(mVcdFile, tmp_d0, "(port)tmp_d0");
    sc_trace(mVcdFile, tmp_q0, "(port)tmp_q0");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, C_address0, "(port)C_address0");
    sc_trace(mVcdFile, C_ce0, "(port)C_ce0");
    sc_trace(mVcdFile, C_q0, "(port)C_q0");
    sc_trace(mVcdFile, D_address0, "(port)D_address0");
    sc_trace(mVcdFile, D_ce0, "(port)D_ce0");
    sc_trace(mVcdFile, D_we0, "(port)D_we0");
    sc_trace(mVcdFile, D_d0, "(port)D_d0");
    sc_trace(mVcdFile, D_q0, "(port)D_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_228_p2, "grp_fu_228_p2");
    sc_trace(mVcdFile, reg_232, "reg_232");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, grp_fu_222_p2, "grp_fu_222_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, i_fu_251_p2, "i_fu_251_p2");
    sc_trace(mVcdFile, i_reg_453, "i_reg_453");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln37_fu_265_p1, "zext_ln37_fu_265_p1");
    sc_trace(mVcdFile, zext_ln37_reg_458, "zext_ln37_reg_458");
    sc_trace(mVcdFile, icmp_ln36_fu_245_p2, "icmp_ln36_fu_245_p2");
    sc_trace(mVcdFile, j_fu_275_p2, "j_fu_275_p2");
    sc_trace(mVcdFile, j_reg_467, "j_reg_467");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln39_fu_281_p1, "zext_ln39_fu_281_p1");
    sc_trace(mVcdFile, zext_ln39_reg_472, "zext_ln39_reg_472");
    sc_trace(mVcdFile, icmp_ln37_fu_269_p2, "icmp_ln37_fu_269_p2");
    sc_trace(mVcdFile, tmp_addr_reg_477, "tmp_addr_reg_477");
    sc_trace(mVcdFile, k_fu_301_p2, "k_fu_301_p2");
    sc_trace(mVcdFile, k_reg_485, "k_reg_485");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln40_fu_295_p2, "icmp_ln40_fu_295_p2");
    sc_trace(mVcdFile, add_ln41_1_fu_333_p2, "add_ln41_1_fu_333_p2");
    sc_trace(mVcdFile, add_ln41_1_reg_495, "add_ln41_1_reg_495");
    sc_trace(mVcdFile, A_load_reg_500, "A_load_reg_500");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, B_load_reg_510, "B_load_reg_510");
    sc_trace(mVcdFile, i_2_fu_348_p2, "i_2_fu_348_p2");
    sc_trace(mVcdFile, i_2_reg_518, "i_2_reg_518");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, zext_ln44_fu_362_p1, "zext_ln44_fu_362_p1");
    sc_trace(mVcdFile, zext_ln44_reg_523, "zext_ln44_reg_523");
    sc_trace(mVcdFile, icmp_ln43_fu_342_p2, "icmp_ln43_fu_342_p2");
    sc_trace(mVcdFile, j_2_fu_372_p2, "j_2_fu_372_p2");
    sc_trace(mVcdFile, j_2_reg_532, "j_2_reg_532");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, zext_ln46_fu_378_p1, "zext_ln46_fu_378_p1");
    sc_trace(mVcdFile, zext_ln46_reg_537, "zext_ln46_reg_537");
    sc_trace(mVcdFile, icmp_ln44_fu_366_p2, "icmp_ln44_fu_366_p2");
    sc_trace(mVcdFile, D_addr_reg_542, "D_addr_reg_542");
    sc_trace(mVcdFile, D_load_reg_547, "D_load_reg_547");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, k_2_fu_398_p2, "k_2_fu_398_p2");
    sc_trace(mVcdFile, k_2_reg_555, "k_2_reg_555");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, icmp_ln47_fu_392_p2, "icmp_ln47_fu_392_p2");
    sc_trace(mVcdFile, empty_7_reg_570, "empty_7_reg_570");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, C_load_reg_575, "C_load_reg_575");
    sc_trace(mVcdFile, tmp_5_reg_580, "tmp_5_reg_580");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, i_0_reg_132, "i_0_reg_132");
    sc_trace(mVcdFile, j_0_reg_143, "j_0_reg_143");
    sc_trace(mVcdFile, storemerge_reg_154, "storemerge_reg_154");
    sc_trace(mVcdFile, k_0_reg_167, "k_0_reg_167");
    sc_trace(mVcdFile, i_1_reg_178, "i_1_reg_178");
    sc_trace(mVcdFile, j_1_reg_189, "j_1_reg_189");
    sc_trace(mVcdFile, storemerge1_reg_200, "storemerge1_reg_200");
    sc_trace(mVcdFile, k_1_reg_211, "k_1_reg_211");
    sc_trace(mVcdFile, zext_ln39_1_fu_290_p1, "zext_ln39_1_fu_290_p1");
    sc_trace(mVcdFile, zext_ln41_1_fu_316_p1, "zext_ln41_1_fu_316_p1");
    sc_trace(mVcdFile, zext_ln41_3_fu_338_p1, "zext_ln41_3_fu_338_p1");
    sc_trace(mVcdFile, zext_ln46_1_fu_387_p1, "zext_ln46_1_fu_387_p1");
    sc_trace(mVcdFile, zext_ln48_1_fu_413_p1, "zext_ln48_1_fu_413_p1");
    sc_trace(mVcdFile, zext_ln48_3_fu_435_p1, "zext_ln48_3_fu_435_p1");
    sc_trace(mVcdFile, grp_fu_222_p0, "grp_fu_222_p0");
    sc_trace(mVcdFile, grp_fu_222_p1, "grp_fu_222_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, grp_fu_228_p0, "grp_fu_228_p0");
    sc_trace(mVcdFile, grp_fu_228_p1, "grp_fu_228_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, tmp_7_fu_257_p3, "tmp_7_fu_257_p3");
    sc_trace(mVcdFile, add_ln39_fu_285_p2, "add_ln39_fu_285_p2");
    sc_trace(mVcdFile, zext_ln41_fu_307_p1, "zext_ln41_fu_307_p1");
    sc_trace(mVcdFile, add_ln41_fu_311_p2, "add_ln41_fu_311_p2");
    sc_trace(mVcdFile, tmp_9_fu_321_p3, "tmp_9_fu_321_p3");
    sc_trace(mVcdFile, zext_ln41_2_fu_329_p1, "zext_ln41_2_fu_329_p1");
    sc_trace(mVcdFile, tmp_8_fu_354_p3, "tmp_8_fu_354_p3");
    sc_trace(mVcdFile, add_ln46_fu_382_p2, "add_ln46_fu_382_p2");
    sc_trace(mVcdFile, zext_ln48_fu_404_p1, "zext_ln48_fu_404_p1");
    sc_trace(mVcdFile, add_ln48_fu_408_p2, "add_ln48_fu_408_p2");
    sc_trace(mVcdFile, tmp_s_fu_418_p3, "tmp_s_fu_418_p3");
    sc_trace(mVcdFile, zext_ln48_2_fu_426_p1, "zext_ln48_2_fu_426_p1");
    sc_trace(mVcdFile, add_ln48_1_fu_430_p2, "add_ln48_1_fu_430_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("kernel2_2mm.hdltvin.dat");
    mHdltvoutHandle.open("kernel2_2mm.hdltvout.dat");
}

kernel2_2mm::~kernel2_2mm() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete kernel2_2mm_dadd_64ns_64ns_64_5_full_dsp_1_U1;
    delete kernel2_2mm_dmul_64ns_64ns_64_5_max_dsp_1_U2;
}

void kernel2_2mm::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void kernel2_2mm::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln37_fu_269_p2.read(), ap_const_lv1_1))) {
        i_0_reg_132 = i_reg_453.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_132 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln36_fu_245_p2.read(), ap_const_lv1_1))) {
        i_1_reg_178 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(icmp_ln44_fu_366_p2.read(), ap_const_lv1_1))) {
        i_1_reg_178 = i_2_reg_518.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_295_p2.read(), ap_const_lv1_1))) {
        j_0_reg_143 = j_reg_467.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln36_fu_245_p2.read(), ap_const_lv1_0))) {
        j_0_reg_143 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
         esl_seteq<1,1,1>(icmp_ln47_fu_392_p2.read(), ap_const_lv1_1))) {
        j_1_reg_189 = j_2_reg_532.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln43_fu_342_p2.read()))) {
        j_1_reg_189 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        k_0_reg_167 = k_reg_485.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_269_p2.read()))) {
        k_0_reg_167 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        k_1_reg_211 = k_2_reg_555.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        k_1_reg_211 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        storemerge1_reg_200 = grp_fu_222_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        storemerge1_reg_200 = grp_fu_228_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        storemerge_reg_154 = grp_fu_222_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_269_p2.read()))) {
        storemerge_reg_154 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        A_load_reg_500 = A_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        B_load_reg_510 = B_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        C_load_reg_575 = C_q0.read();
        empty_7_reg_570 = tmp_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_fu_366_p2.read()))) {
        D_addr_reg_542 =  (sc_lv<10>) (zext_ln46_1_fu_387_p1.read());
        zext_ln46_reg_537 = zext_ln46_fu_378_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        D_load_reg_547 = D_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_295_p2.read()))) {
        add_ln41_1_reg_495 = add_ln41_1_fu_333_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        i_2_reg_518 = i_2_fu_348_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_453 = i_fu_251_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        j_2_reg_532 = j_2_fu_372_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_467 = j_fu_275_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        k_2_reg_555 = k_2_fu_398_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_485 = k_fu_301_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        reg_232 = grp_fu_228_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        tmp_5_reg_580 = grp_fu_228_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_269_p2.read()))) {
        tmp_addr_reg_477 =  (sc_lv<10>) (zext_ln39_1_fu_290_p1.read());
        zext_ln39_reg_472 = zext_ln39_fu_281_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln36_fu_245_p2.read(), ap_const_lv1_0))) {
        zext_ln37_reg_458 = zext_ln37_fu_265_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln43_fu_342_p2.read()))) {
        zext_ln44_reg_523 = zext_ln44_fu_362_p1.read();
    }
}

void kernel2_2mm::thread_A_address0() {
    A_address0 =  (sc_lv<10>) (zext_ln41_1_fu_316_p1.read());
}

void kernel2_2mm::thread_A_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void kernel2_2mm::thread_B_address0() {
    B_address0 =  (sc_lv<10>) (zext_ln41_3_fu_338_p1.read());
}

void kernel2_2mm::thread_B_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void kernel2_2mm::thread_C_address0() {
    C_address0 =  (sc_lv<10>) (zext_ln48_3_fu_435_p1.read());
}

void kernel2_2mm::thread_C_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void kernel2_2mm::thread_D_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        D_address0 = D_addr_reg_542.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        D_address0 =  (sc_lv<10>) (zext_ln46_1_fu_387_p1.read());
    } else {
        D_address0 = "XXXXXXXXXX";
    }
}

void kernel2_2mm::thread_D_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        D_ce0 = ap_const_logic_1;
    } else {
        D_ce0 = ap_const_logic_0;
    }
}

void kernel2_2mm::thread_D_d0() {
    D_d0 = storemerge1_reg_200.read();
}

void kernel2_2mm::thread_D_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        D_we0 = ap_const_logic_1;
    } else {
        D_we0 = ap_const_logic_0;
    }
}

void kernel2_2mm::thread_add_ln39_fu_285_p2() {
    add_ln39_fu_285_p2 = (!zext_ln37_reg_458.read().is_01() || !zext_ln39_fu_281_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln37_reg_458.read()) + sc_biguint<12>(zext_ln39_fu_281_p1.read()));
}

void kernel2_2mm::thread_add_ln41_1_fu_333_p2() {
    add_ln41_1_fu_333_p2 = (!zext_ln39_reg_472.read().is_01() || !zext_ln41_2_fu_329_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln39_reg_472.read()) + sc_biguint<12>(zext_ln41_2_fu_329_p1.read()));
}

void kernel2_2mm::thread_add_ln41_fu_311_p2() {
    add_ln41_fu_311_p2 = (!zext_ln41_fu_307_p1.read().is_01() || !zext_ln37_reg_458.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln41_fu_307_p1.read()) + sc_biguint<12>(zext_ln37_reg_458.read()));
}

void kernel2_2mm::thread_add_ln46_fu_382_p2() {
    add_ln46_fu_382_p2 = (!zext_ln44_reg_523.read().is_01() || !zext_ln46_fu_378_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln44_reg_523.read()) + sc_biguint<12>(zext_ln46_fu_378_p1.read()));
}

void kernel2_2mm::thread_add_ln48_1_fu_430_p2() {
    add_ln48_1_fu_430_p2 = (!zext_ln46_reg_537.read().is_01() || !zext_ln48_2_fu_426_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln46_reg_537.read()) + sc_biguint<12>(zext_ln48_2_fu_426_p1.read()));
}

void kernel2_2mm::thread_add_ln48_fu_408_p2() {
    add_ln48_fu_408_p2 = (!zext_ln48_fu_404_p1.read().is_01() || !zext_ln44_reg_523.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln48_fu_404_p1.read()) + sc_biguint<12>(zext_ln44_reg_523.read()));
}

void kernel2_2mm::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel2_2mm::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void kernel2_2mm::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void kernel2_2mm::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void kernel2_2mm::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void kernel2_2mm::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void kernel2_2mm::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void kernel2_2mm::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void kernel2_2mm::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void kernel2_2mm::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void kernel2_2mm::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void kernel2_2mm::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void kernel2_2mm::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void kernel2_2mm::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void kernel2_2mm::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void kernel2_2mm::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void kernel2_2mm::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void kernel2_2mm::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void kernel2_2mm::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void kernel2_2mm::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void kernel2_2mm::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void kernel2_2mm::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void kernel2_2mm::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void kernel2_2mm::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(icmp_ln43_fu_342_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kernel2_2mm::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel2_2mm::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(icmp_ln43_fu_342_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel2_2mm::thread_grp_fu_222_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_222_p0 = storemerge1_reg_200.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_222_p0 = storemerge_reg_154.read();
    } else {
        grp_fu_222_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel2_2mm::thread_grp_fu_222_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_222_p1 = tmp_5_reg_580.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_222_p1 = reg_232.read();
    } else {
        grp_fu_222_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel2_2mm::thread_grp_fu_228_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_228_p0 = empty_7_reg_570.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_228_p0 = D_load_reg_547.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_228_p0 = reg_232.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_228_p0 = A_load_reg_500.read();
    } else {
        grp_fu_228_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel2_2mm::thread_grp_fu_228_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_228_p1 = C_load_reg_575.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_228_p1 = beta.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_228_p1 = B_load_reg_510.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_228_p1 = alpha.read();
    } else {
        grp_fu_228_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel2_2mm::thread_i_2_fu_348_p2() {
    i_2_fu_348_p2 = (!i_1_reg_178.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_reg_178.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void kernel2_2mm::thread_i_fu_251_p2() {
    i_fu_251_p2 = (!i_0_reg_132.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_132.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void kernel2_2mm::thread_icmp_ln36_fu_245_p2() {
    icmp_ln36_fu_245_p2 = (!i_0_reg_132.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_132.read() == ap_const_lv6_20);
}

void kernel2_2mm::thread_icmp_ln37_fu_269_p2() {
    icmp_ln37_fu_269_p2 = (!j_0_reg_143.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_143.read() == ap_const_lv6_20);
}

void kernel2_2mm::thread_icmp_ln40_fu_295_p2() {
    icmp_ln40_fu_295_p2 = (!k_0_reg_167.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_167.read() == ap_const_lv6_20);
}

void kernel2_2mm::thread_icmp_ln43_fu_342_p2() {
    icmp_ln43_fu_342_p2 = (!i_1_reg_178.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_178.read() == ap_const_lv6_20);
}

void kernel2_2mm::thread_icmp_ln44_fu_366_p2() {
    icmp_ln44_fu_366_p2 = (!j_1_reg_189.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_189.read() == ap_const_lv6_20);
}

void kernel2_2mm::thread_icmp_ln47_fu_392_p2() {
    icmp_ln47_fu_392_p2 = (!k_1_reg_211.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(k_1_reg_211.read() == ap_const_lv6_20);
}

void kernel2_2mm::thread_j_2_fu_372_p2() {
    j_2_fu_372_p2 = (!j_1_reg_189.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_1_reg_189.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void kernel2_2mm::thread_j_fu_275_p2() {
    j_fu_275_p2 = (!j_0_reg_143.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_0_reg_143.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void kernel2_2mm::thread_k_2_fu_398_p2() {
    k_2_fu_398_p2 = (!k_1_reg_211.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(k_1_reg_211.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void kernel2_2mm::thread_k_fu_301_p2() {
    k_fu_301_p2 = (!k_0_reg_167.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(k_0_reg_167.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void kernel2_2mm::thread_tmp_7_fu_257_p3() {
    tmp_7_fu_257_p3 = esl_concat<6,5>(i_0_reg_132.read(), ap_const_lv5_0);
}

void kernel2_2mm::thread_tmp_8_fu_354_p3() {
    tmp_8_fu_354_p3 = esl_concat<6,5>(i_1_reg_178.read(), ap_const_lv5_0);
}

void kernel2_2mm::thread_tmp_9_fu_321_p3() {
    tmp_9_fu_321_p3 = esl_concat<6,5>(k_0_reg_167.read(), ap_const_lv5_0);
}

void kernel2_2mm::thread_tmp_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        tmp_address0 =  (sc_lv<10>) (zext_ln48_1_fu_413_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_address0 = tmp_addr_reg_477.read();
    } else {
        tmp_address0 = "XXXXXXXXXX";
    }
}

void kernel2_2mm::thread_tmp_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        tmp_ce0 = ap_const_logic_1;
    } else {
        tmp_ce0 = ap_const_logic_0;
    }
}

void kernel2_2mm::thread_tmp_d0() {
    tmp_d0 = storemerge_reg_154.read();
}

void kernel2_2mm::thread_tmp_s_fu_418_p3() {
    tmp_s_fu_418_p3 = esl_concat<6,5>(k_1_reg_211.read(), ap_const_lv5_0);
}

void kernel2_2mm::thread_tmp_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_we0 = ap_const_logic_1;
    } else {
        tmp_we0 = ap_const_logic_0;
    }
}

void kernel2_2mm::thread_zext_ln37_fu_265_p1() {
    zext_ln37_fu_265_p1 = esl_zext<12,11>(tmp_7_fu_257_p3.read());
}

void kernel2_2mm::thread_zext_ln39_1_fu_290_p1() {
    zext_ln39_1_fu_290_p1 = esl_zext<64,12>(add_ln39_fu_285_p2.read());
}

void kernel2_2mm::thread_zext_ln39_fu_281_p1() {
    zext_ln39_fu_281_p1 = esl_zext<12,6>(j_0_reg_143.read());
}

void kernel2_2mm::thread_zext_ln41_1_fu_316_p1() {
    zext_ln41_1_fu_316_p1 = esl_zext<64,12>(add_ln41_fu_311_p2.read());
}

void kernel2_2mm::thread_zext_ln41_2_fu_329_p1() {
    zext_ln41_2_fu_329_p1 = esl_zext<12,11>(tmp_9_fu_321_p3.read());
}

void kernel2_2mm::thread_zext_ln41_3_fu_338_p1() {
    zext_ln41_3_fu_338_p1 = esl_zext<64,12>(add_ln41_1_reg_495.read());
}

void kernel2_2mm::thread_zext_ln41_fu_307_p1() {
    zext_ln41_fu_307_p1 = esl_zext<12,6>(k_0_reg_167.read());
}

void kernel2_2mm::thread_zext_ln44_fu_362_p1() {
    zext_ln44_fu_362_p1 = esl_zext<12,11>(tmp_8_fu_354_p3.read());
}

void kernel2_2mm::thread_zext_ln46_1_fu_387_p1() {
    zext_ln46_1_fu_387_p1 = esl_zext<64,12>(add_ln46_fu_382_p2.read());
}

void kernel2_2mm::thread_zext_ln46_fu_378_p1() {
    zext_ln46_fu_378_p1 = esl_zext<12,6>(j_1_reg_189.read());
}

void kernel2_2mm::thread_zext_ln48_1_fu_413_p1() {
    zext_ln48_1_fu_413_p1 = esl_zext<64,12>(add_ln48_fu_408_p2.read());
}

void kernel2_2mm::thread_zext_ln48_2_fu_426_p1() {
    zext_ln48_2_fu_426_p1 = esl_zext<12,11>(tmp_s_fu_418_p3.read());
}

void kernel2_2mm::thread_zext_ln48_3_fu_435_p1() {
    zext_ln48_3_fu_435_p1 = esl_zext<64,12>(add_ln48_1_fu_430_p2.read());
}

void kernel2_2mm::thread_zext_ln48_fu_404_p1() {
    zext_ln48_fu_404_p1 = esl_zext<12,6>(k_1_reg_211.read());
}

void kernel2_2mm::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln36_fu_245_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln37_fu_269_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln40_fu_295_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(icmp_ln43_fu_342_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(icmp_ln44_fu_366_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && esl_seteq<1,1,1>(icmp_ln47_fu_392_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<40>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void kernel2_2mm::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ni\" :  \"" << ni.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nj\" :  \"" << nj.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nk\" :  \"" << nk.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nl\" :  \"" << nl.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"alpha\" :  \"" << alpha.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"beta\" :  \"" << beta.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"tmp_address0\" :  \"" << tmp_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"tmp_ce0\" :  \"" << tmp_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"tmp_we0\" :  \"" << tmp_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"tmp_d0\" :  \"" << tmp_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"tmp_q0\" :  \"" << tmp_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address0\" :  \"" << B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce0\" :  \"" << B_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q0\" :  \"" << B_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_address0\" :  \"" << C_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_ce0\" :  \"" << C_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_q0\" :  \"" << C_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_address0\" :  \"" << D_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_ce0\" :  \"" << D_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_we0\" :  \"" << D_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_d0\" :  \"" << D_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"D_q0\" :  \"" << D_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

